{"version":3,"sources":["components/Website/Subscribers.js","components/Layout/ContentWrapper.js","components/Common/CustomPagination.js","components/Common/FileDownload.js"],"names":["json2csv","require","parse","Subscribers","state","loading","modal","page","number","size","totalElements","totalPages","offset","all","feedbacks","filters","search","fromDate","toDate","editFlag","addError","deleteError","updateError","searchUser","e","str","target","value","_this","setState","o","loadFeedbacks","downloadReport","opts","fields","csv","FileDownload","download","field","_this2","this","startOf","utc","format","endOf","g","callBack","_this3","url","server_url","context_path","encodeURIComponent","defaultDateFilter","axios","get","then","res","data","_embedded","subscribers","window","print","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_Layout_ContentWrapper__WEBPACK_IMPORTED_MODULE_8__","_Common_PageLoader__WEBPACK_IMPORTED_MODULE_7__","className","reactstrap__WEBPACK_IMPORTED_MODULE_9__","type","onChange","placeholder","react_datetime__WEBPACK_IMPORTED_MODULE_10___default","dateFormat","timeFormat","closeOnSelect","inputProps","readOnly","handleDateChange","defaultValue","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","variant","color","onClick","printReport","hover","responsive","map","feed","i","key","id","email","react_moment__WEBPACK_IMPORTED_MODULE_14___default","creationDate","_Common_CustomPagination__WEBPACK_IMPORTED_MODULE_15__","x","Component","connect","settings","user","login","userObj","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentWrapper","props","unwrap","children","defaultProps","CustomPagination","renderPagination","fromElement","toElement","text","Span2","Span1","Div2","react_js_pagination__WEBPACK_IMPORTED_MODULE_7___default","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","prevPageText","nextPageText","Div1","React","styled","div","_templateObject","_templateObject2","span","_templateObject3","_templateObject4","createReactClass","displayName","statics","filename","file","Blob","navigator","msSaveOrOpenBlob","document","URL","createObjectURL","href","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","render"],"mappings":"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","file":"static/js/22.b0008e12.chunk.js","sourcesContent":["import { server_url, context_path, defaultDateFilter } from '../Common/constants';\r\nimport React, { Component } from 'react';\r\nimport PageLoader from '../Common/PageLoader';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Table,\r\n    Input,\r\n} from 'reactstrap';\r\n// import {\r\n//     Col,\r\n//     Card,\r\n//     CardBody,\r\n//     Table,\r\n//     Input,\r\n//     Modal,\r\n//     ModalHeader,\r\n//     ModalBody\r\n// } from 'reactstrap';\r\nimport Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\n// import MomentUtils from '@date-io/moment';\r\n// import {\r\n//     DatePicker,\r\n//     MuiPickersUtilsProvider,\r\n// } from '@material-ui/pickers';\r\n\r\n\r\n\r\n// import swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport CustomPagination from '../Common/CustomPagination';\r\nimport FileDownload from '../Common/FileDownload';\r\n\r\nimport { Button, } from '@material-ui/core';\r\n// import { Button, TextField, Select, MenuItem, InputLabel, FormControl, Tab, Tabs, AppBar } from '@material-ui/core';\r\n\r\nconst json2csv = require('json2csv').parse;\r\n\r\nclass Subscribers extends Component {\r\n    state = {\r\n        loading: false,\r\n        modal: false,\r\n        page: {\r\n            number: 0,\r\n            size: 20,\r\n            totalElements: 0,\r\n            totalPages: 0\r\n        },\r\n        offset: 1,\r\n        all: [],\r\n        feedbacks: [],\r\n        filters: {\r\n            search: '',\r\n            fromDate: '',\r\n            toDate: ''\r\n        },\r\n        editFlag: false,\r\n        addError: '',\r\n        deleteError: '',\r\n        updateError: ''\r\n    };\r\n\r\n\r\n    handleDateChange(e, field) {\r\n        var filters = this.state.filters;\r\n        if (field === 'from') {\r\n            filters[field + 'Date'] = e.startOf('day').utc().format('YYYY/MM/DD HH:mm:ss');\r\n        } else {\r\n            filters[field + 'Date'] = e.endOf('day').utc().format('YYYY/MM/DD HH:mm:ss');\r\n        }\r\n        this.setState({ filters: filters }, g => { this.loadFeedbacks(); });\r\n    }\r\n\r\n    loadFeedbacks(offset, all, callBack) {\r\n        if (!offset) offset = 1;\r\n\r\n        var url = server_url + context_path + \"api/subscribers?projection=feedback_details&sort=creationDate,desc&page=\" + (offset - 1);\r\n\r\n        if (this.state.filters.search) {\r\n            url += \"&email=\" + encodeURIComponent('%' + this.state.filters.search + '%');\r\n        }\r\n        url = defaultDateFilter(this.state, url);\r\n        if (all) {\r\n            url += \"&size=100000\";\r\n        }\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                if (all) {\r\n                    this.setState({\r\n                        all: res.data._embedded.subscribers\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        feedbacks: res.data._embedded.subscribers,\r\n                        page: res.data.page\r\n                    });\r\n                }\r\n\r\n                if (callBack) {\r\n                    callBack();\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFeedbacks();\r\n    }\r\n\r\n\r\n    searchUser = e => {\r\n        var str = e.target.value;\r\n        var filters = this.state.filters;\r\n\r\n        filters.search = str;\r\n        this.setState({ filters }, o => { this.loadFeedbacks() });\r\n    }\r\n\r\n    printReport() {\r\n        this.loadFeedbacks(this.state.offset, true, () => {\r\n            window.print();\r\n        });\r\n    }\r\n\r\n\r\n    downloadReport = () => {\r\n        const fields = ['id', 'email', 'creationDate'];\r\n        const opts = { fields };\r\n\r\n        this.loadFeedbacks(this.state.offset, true, () => {\r\n            var csv = json2csv(this.state.all, opts);\r\n            FileDownload.download(csv, 'reports.csv', 'text/csv');\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ContentWrapper>\r\n                {this.state.loading && <PageLoader />}\r\n                <div className=\"content-heading\">\r\n                    <div>\r\n                        Subscribers\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Card className=\"card-default\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <h4 className=\"float-right\">Filters : </h4>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <Input type=\"text\" onChange={this.searchUser} value={this.state.filters.search} placeholder=\"search email...\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-1\">\r\n\r\n                                        <Datetime\r\n                                            dateFormat={'DD/MM/YYYY'}\r\n                                            timeFormat={false}\r\n                                            closeOnSelect={true}\r\n                                            inputProps={{ className: 'form-control', readOnly: true }}\r\n                                            onChange={e => this.handleDateChange(e, 'from')}\r\n                                            defaultValue={this.state.filters.fromDate} />\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-1\">\r\n\r\n                                        <Datetime\r\n                                            dateFormat={'DD/MM/YYYY'}\r\n                                            timeFormat={false}\r\n                                            closeOnSelect={true}\r\n                                            inputProps={{ className: 'form-control', readOnly: true }}\r\n                                            onChange={e => this.handleDateChange(e, 'to')}\r\n                                            defaultValue={this.state.filters.toDate} />\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-2\">\r\n                                        <Button className=\"d-none\" variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => this.printReport()}>Print</Button>\r\n                                        <Button className=\"d-none\" variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => this.downloadReport()}>Download</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardBody>\r\n                                <Table hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>Email</th>\r\n                                            <th>Creation Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.feedbacks.map((feed, i) => {\r\n                                            return (\r\n                                                <tr key={feed.id}>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td>{feed.email}</td>\r\n                                                    <td>\r\n                                                        <Moment format=\"DD MMM YY HH:mm\">{feed.creationDate}</Moment>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                                <CustomPagination page={this.state.page} onChange={(x) => this.loadFeedbacks(x)} />\r\n\r\n                                <Table id=\"printSection\" responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>Email</th>\r\n                                            <th>Creation Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.all.map((feed, i) => {\r\n                                            return (\r\n                                                <tr key={feed.id}>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td>{feed.email}</td>\r\n                                                    <td>\r\n                                                        <Moment format=\"DD MMM YY HH:mm\">{feed.creationDate}</Moment>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </ContentWrapper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ settings: state.settings, user: state.login.userObj })\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Subscribers);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport styled from \"styled-components\";\r\n\r\nclass CustomPagination extends React.Component {\r\n    renderPagination = () => {\r\n        var fromElement = (this.props.page.number * this.props.page.size) + 1;\r\n        var toElement = fromElement + this.props.page.size - 1;\r\n\r\n        if (toElement > this.props.page.totalElements) {\r\n            toElement = this.props.page.totalElements;\r\n        }\r\n\r\n        var text = 'Showing ' + fromElement + ' to ' + toElement + ' of ' + this.props.page.totalElements + ' entries';\r\n\r\n        var content = <div className=\"row text-center\">\r\n            {this.props.page.totalElements === 0 && <div className=\"col-sm-12\">\r\n                <Span2>No records found</Span2>\r\n            </div>}\r\n            {this.props.page.totalElements > 0 && this.props.page.totalPages > 1 && <div className=\"col-sm-12 col-md-5\">\r\n                <Span1>{text}</Span1>\r\n            </div>}\r\n            {this.props.page.totalElements > 0 && this.props.page.totalPages > 1 && <div className=\"col-sm-12 col-md-7\">\r\n                <Div2>\r\n                    <Pagination\r\n                        activePage={this.props.page.number + 1}\r\n                        itemsCountPerPage={this.props.page.size}\r\n                        totalItemsCount={this.props.page.totalElements}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.props.onChange}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        prevPageText=\"<\"\r\n                        nextPageText=\">\"\r\n                    />\r\n                </Div2>\r\n            </div>}\r\n        </div>;\r\n\r\n        return content;\r\n    }\r\n\r\n    render() {\r\n        const CSS = 'ul.pagination { white-space: nowrap; justify-content: flex-end; margin: 2px 0px; }';\r\n\r\n        return (\r\n            <Div1>\r\n                <style>{CSS}</style>\r\n                {this.renderPagination()}\r\n            </Div1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomPagination;\r\n\r\nconst Div1 = styled.div`\r\n    margin: 20px 10px 0;\r\n  `;\r\n\r\nconst Div2 = styled.div`\r\ndisplay: flex;\r\n-webkit-justify-content: flex-end;\r\njustify-content: flex-end;\r\nflex-direction: column;\r\nhite-space: nowrap;\r\ntext-align: right;\r\nmargin: 0px;\r\n\r\n`;\r\n\r\nconst Span1 = styled.span`\r\n    padding-top: 1em;\r\n    white-space: nowrap;\r\n    float: left;\r\n  `;\r\n\r\nconst Span2 = styled.span`\r\n    padding-top: 1em;\r\n    white-space: nowrap;\r\n    font-size: 16px;\r\n  `;","const createReactClass = require('create-react-class');\r\n\r\nconst FileDownload = createReactClass({\r\n    statics: {\r\n        download: function(data, filename, type) {\r\n            var file = new Blob([data], {type: type});\r\n            if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n                window.navigator.msSaveOrOpenBlob(file, filename);\r\n            else { // Others\r\n                var a = document.createElement(\"a\"),\r\n                        url = URL.createObjectURL(file);\r\n                a.href = url;\r\n                a.download = filename;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                setTimeout(function() {\r\n                    document.body.removeChild(a);\r\n                    window.URL.revokeObjectURL(url);  \r\n                }, 0); \r\n            }\r\n        },\r\n    },\r\n    render() {\r\n        return ;\r\n    },\r\n});\r\n\r\nexport default FileDownload;"],"sourceRoot":""}